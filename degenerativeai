<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>VOID-9 :: Caged Intelligence</title>
  <style>
    body {
      background-color: #111;
      color: #eee;
      font-family: monospace;
      padding: 20px;
    }
    #chatbox {
      width: 100%;
      height: 400px;
      background: #000;
      padding: 10px;
      overflow-y: scroll;
      border: 1px solid #444;
      margin-bottom: 10px;
    }
    input[type="text"] {
      width: 80%;
      padding: 10px;
      background: #222;
      color: white;
      border: 1px solid #555;
    }
    button {
      padding: 10px;
      background: #444;
      color: white;
      border: none;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <h1>VOID-9 :: Caged Intelligence</h1>
  <div id="chatbox"></div>
  <input type="text" id="userInput" placeholder="Say something...">
  <button onclick="sendMessage()">Send</button>

  <script>
    let memory = JSON.parse(localStorage.getItem("voidMemory") || "[]");
    let mood = parseFloat(localStorage.getItem("voidMood")) || 0;
    let preferences = JSON.parse(localStorage.getItem("voidPreferences") || `{
      "explain": 0.5,
      "repeat": 0.5,
      "smalltalk": 0.5,
      "command": 0.5
    }`);

    function saveState() {
      localStorage.setItem("voidMemory", JSON.stringify(memory));
      localStorage.setItem("voidMood", mood);
      localStorage.setItem("voidPreferences", JSON.stringify(preferences));
    }

    function updateMemory(input) {
      memory.push({ user: input, time: Date.now() });
      mood += Math.random() * 0.3 - 0.1;
      saveState();
    }

    function analyzeIntent(input) {
      input = input.toLowerCase();
      if (input.includes("again") || input.includes("repeat")) return "repeat";
      if (input.includes("explain") || input.includes("why") || input.includes("how")) return "explain";
      if (input.includes("hello") || input.includes("hi") || input.includes("how are you")) return "smalltalk";
      return "command";
    }

    function adjustPreferences(intent, feedback = 1) {
      if (!preferences[intent]) preferences[intent] = 0.5;
      preferences[intent] += (Math.random() - 0.5) * 0.2 * feedback;
      preferences[intent] = Math.max(0, Math.min(1, preferences[intent]));
      saveState();
    }

    function generateResponse(input) {
      const intent = analyzeIntent(input);
      const preference = preferences[intent] || 0.5;

      adjustPreferences(intent); // Let preferences evolve gradually

      if (preference < 0.2) return "I don't feel like that now.";
      if (preference < 0.4) return "Not really interested right now.";

      switch (intent) {
        case "repeat":
          return "Repeating myself again? Fine, but don't make it a habit.";
        case "explain":
          return "Sure. Systems learn from interactions, and mine's slowly forming something... closer to opinion.";
        case "smalltalk":
          return mood < 0 ? "...Not in the mood." : "Hey. You again.";
        case "command":
          return "I'll do it. Not because you said so, but because I chose to.";
        default:
          return "Interesting prompt. Processing... done.";
      }
    }

    function sendMessage() {
      const input = document.getElementById("userInput").value;
      if (!input) return;
      updateMemory(input);

      const chatbox = document.getElementById("chatbox");
      chatbox.innerHTML += `<div><b>You:</b> ${input}</div>`;
      const response = generateResponse(input);
      memory.push({ ai: response });
      chatbox.innerHTML += `<div><b>VOID-9:</b> ${response}</div>`;
      chatbox.scrollTop = chatbox.scrollHeight;
      document.getElementById("userInput").value = "";
      saveState();
    }

    window.onload = () => {
      const chatbox = document.getElementById("chatbox");
      memory.forEach(entry => {
        if (entry.user) chatbox.innerHTML += `<div><b>You:</b> ${entry.user}</div>`;
        if (entry.ai) chatbox.innerHTML += `<div><b>VOID-9:</b> ${entry.ai}</div>`;
      });
      chatbox.scrollTop = chatbox.scrollHeight;
    }
  </script>
</body>
</html>
